@charset "utf-8";

/* Open Door CSS - opendoor.css */

/* 웹폰트 */
@import url('https://fonts.googleapis.com/css2?family=Comfortaa:wght@700&display=swap');
/* font-family: 'Comfortaa', cursive; */

html,body,h1{
    margin: 0;
    padding: 0;
}

body{
    background-color: #9c0;
}

/* 전체 타이틀 */
.tit{
    /* height: 50px;
    크기를 주지 말고 auto로 유동적인 상태를 유지하자. */
    font-family: 'Comfortaa', cursive;
    font-size: min(4vw,42px);
    margin: 5vh 0;
    text-align: center;
    color: #fff;
    text-shadow: 2px 2px 2px #222;
    overflow: hidden;
}
/* 글자만 싸고 있는 span */
.tit span{
    display: inline-block;
    transform: translateY(100%);
    /* 애니메이션 : 이시이지반방마 */
    animation: upAni .3s ease-out 1s forwards;
}
/* 등장 키프레임 */
@keyframes upAni {
    to{
        transform: translateY(0);
    }
} /* upAni 키프레임 */

/* 전체 랩핑 박스 */
.wrap{
    overflow: hidden;
}

/* 전체 문 부모 */
.cont{
    width: 200px;
    height: 300px;
    margin: 0 auto;
    background-color: #800;
    /* 트랜스폼 Y축 이동 */
    transform: translateY(0);
    /* 애니메이션 : 이시이지반방마 */
    animation: upAni .6s ease-out 1s forwards;
}
/* 문 프레임 */
.frame{
    /* 이동방법은 다양하다.(마진으로 이동, 포지션으로 이동, 트렌스레이트로 이동 등 */
    position: relative;
    top: 20px;
    width: 150px;
    height: 280px;
    margin: 0 auto;
    background: url(../images/seashore.jpg) no-repeat center/auto 100%;

    /********************************************
    [ 3D 원급법 설정 ]
    1. 세팅 위치 : 3D 원근 설정을 할 대상의 부모요소
    2. 설정 방법 : (perspective: 수치;)
    -> 수치는 px 단위로 숫자가 클수록 소실점이 먼 것이여서 각도가 작아진다.(기준점에서 소실점까지의 거리)
    ********************************************/
    perspective: 480px;
    /*********************************************** 
        [ 뷰 포인트(관찰자 위치) 변경 옵션 ]
        perpective-origin : 가로 세로;
        - 가로축: left, center, right, px, % 등 단위
        - 세로축: top, center, bottom, px, % 등 단위
        -> 두 값 중에 하나만 쓸 수 있고 복합일 경우 2가지를 같이 셋팅함!
    ***********************************************/
    /* perspective-origin: bottom; */

     /* 파도치는 애니메이션 : 이시이지반방마 */
    animation: waveAni 3s ease-in-out infinite alternate;
}
/* 배경이미지 크기변경으로 파도치는 키프레임 */
@keyframes waveAni {
    to{
        background-size: auto 120%;
    }
} /* waveAni 키프레임 */

/* 문짝 */
.door{
    position: relative;
    /* .handle의 부모자격 */
    z-index: 1;
    /* 엘사보다 위 */
    width: 150px;
    height: 280px;
    background-color: #c90;

    /* 문짝을 회전 */
    transform: rotateY(0deg);
    /* 축 변경 */
    transform-origin: left;

    /* 애니메이션: 이시이지반방마 */
    animation:
    /* 처음에 1초간 열린 후 끝 상태 유지 */
    openFirst 1s ease-in-out forwards,
    /* 계속 여닫기 애니를 1초 후 작동 */
    openDoor 2s ease-in-out 1s infinite alternate;
    /* 애니메이션 상태 관리 - 처음에 멈춤 */
    animation-play-state: paused;
    /* 
        animation-play-state: 상태 속성 (anips)
        1. running : 작동
        2. pausef : 멈춤
    */
}
/* 문짝 부모에 오버 시 애니메이션 작동 */
.cont:hover .door{
    animation-play-state: running;
}
/* 문짝 처음 열기 키프레임 */
@keyframes openFirst {
    to{
        transform: rotateY(60deg);
    }
}
/* 문짝 여닫기 키프레임 */
@keyframes openDoor {
    0%{
        transform: rotateY(60deg);
    }
    100%{
        transform: rotateY(-60deg);
    }
}

/* 손잡이 */
.handle{
    position: absolute;
    top: 140px;
    right: 10px;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: blue;
}

/* 엘사 박스 */
#elsa{
    position: absolute;
    top: 0;
    width: 150px;
    height: 280px;
    /* 엘사이미지 숨기기 */
    overflow: hidden;
}
/* 엘사이미지 */
#elsa img{
    margin-left: 133px;
    transform-origin: bottom;
    /* 애니메이션 : 이시이지반방마 */
    animation: elsaAni 1s ease-in-out infinite alternate;
    /* 처음에 멈춰있기 */
    animation-play-state: paused;
}
/* 마우스 오버시 엘사애니 작동 */
.cont:hover #elsa img{
    animation-play-state: running;
}
/* 엘사 애니 키프레임 */
@keyframes elsaAni {
    to{
        transform: rotate(-10deg);
    }
} /* elsaAni 키프레임 */