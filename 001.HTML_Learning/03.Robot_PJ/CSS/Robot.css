@charset "utf-8";

/* 로봇 PJ 메인 CSS - Robot.css */

/* 초기화 */
html,body,h1,h2,p,ol,ul{
    margin: 0;
    padding: 0;
}

/*********************************** 공통 클래스 ***********************************/

/* 메탈 소재1 배경 */
.mt1{
    background: url(../images/metal01.jpg) no-repeat center/cover;
}
/* 메탈 소재2 배경 */
.mt2{
    background: url(../images/metal02.jpg) no-repeat center/cover;
}

/* html,body{
    overflow: hidden;
} */
body{
    background: url(../images/bg.jpg) no-repeat fixed top/cover;
}

/* 코딩 중에 가독성을 위한 임시 표시 */
/* body *{
    outline: 2px dashed yellow;
} */

/*********************************** 1. 상단 영역 ***********************************/

/* 1-1. 로고 */
/* 1-2. 링크 타이틀 */
/* 1-3. 탑 이동 버튼 */

/*********************************** 2. 메인 영역 ***********************************/

/***************
2-1. 로봇 박스
***************/

    .robx{
        padding: 100px 0 600px;
    }

/***** 2-1-1. 로봇 머리 *****/
.head{
    /* 하위 div들을 위한 부모 자격 부여 */
    position: relative;
    width: 100px;
    height: 100px;
    margin: 0 auto;
}
/* 로봇 머리 직계 하위 div는 모두 앱솔루트 */
.head>div{
    position: absolute;
}
/* 각진 턱을 만들어주기 */
.head::before{
    content: '';
    display: block;
    position: absolute;
    /* 이때 부모는 .head */
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background: url(../images/metal01.jpg) no-repeat center/cover;
    clip-path: polygon(0 0,0 50%,15% 75%,25% 85%,50% 100%,75% 85%,85% 75%,100% 50%,100% 0);
}
/* 로봇 머리에 가상요소로 머리털 박스 만들기 */
.head::after{
    content: '';
    display: block;
    position: absolute;
    /* 이때 부모는 .head */
    top: -35px;
    left: -50px;
    width: 200px;
    height: 220px;
    background: url(../images/hair01.png) no-repeat center/100% 100%;
}

/* 2-1-1. 눈 공통 클래스 */
.eye{
    width: 20px;
    height: 20px;

    /* 배경 공통 */
    background-color: #fff;
    background-repeat: no-repeat;
    background-position: center;
    background-size: 100% 100%;

    /* 둥근 모서리 */
    border-radius: 50%;
    border: 1px solid #FFDEAD;
}
/* 2-1-1. 왼쪽 눈 */
.L_eye{
    background-image: url(../images/eye-L.png);
    top: 27px;
    left: 20px;
}
/* 2-1-1. 오른쪽 눈 */
.R_eye{
    top: 33px;
    right: 23px;
    background-image: url(../images/eye-R.png);
}
/* 눈물점으로 별 박아보기 */
/* .R_eye::after{ 
    오른쪽 눈이 회전할 때 별도 같이 돌아서 별을 귀에다 박는다.*/
.R_ear::before{
    content: '';
    display: block;
    position: absolute;
    /* 부모는? R_eye */
    top: 18px;
    right: 20px;
    width: 10px;
    height: 10px;
    background-color: red;

    /* 클리핑으로 별 만들기 */
    clip-path: polygon(50% 0,63% 37%,100% 37%,70% 62%,80% 100%,50% 77%,20% 100%,30% 62%,0 37%,37% 37%);

    /* 
    [ css 클리핑 속성 ]
    -> clip-path (cpp) : polygon(x1 y1,x2 y2, ...)
    -> 각 좌표위치는 띄어쓰기로 구분, 각 점은 콤마로 구분한다.
    -> 각 점을 연결하는 도형을 출력
    -> px는 각 도형의 크기를 수치로 쓰고
    -> %는 도형을 기준한 위치를 사용한다.
    */
}

/* 2-1-1. 귀 공통 클래스 */
.ear{
    top: 30px;
    width: 10px;
    height: 20px;
}
/* 2-1-1. 왼쪽 귀 */
.L_ear{
    left: -5px;
    border-radius: 35px 0 0 60px;
}
/* 2-1-1. 오른쪽 귀 */
.R_ear{
    right: -5px;
    border-radius: 0 35px 60px 0;
}

/* 2-1-1. 코 */
.nose{
    width: 10px;
    height: 15px;
    background-color: #FFDEAD;;
    /* background: url(../images/nose.jpg) no-repeat 0/110% 100%; */
    clip-path: polygon(50% 0,0 100%,100% 100%);
    top: 50%;
    left: calc(50% - 5px);
}

/* 2-1-1. 입 */
.mouth{
    width: 40px;
    height: 20px;
    background: url(../images/mouth.png) no-repeat 0/100% 100%;
    top: 65%;
    left: calc(50% - 20px);
}

/***************
2-2. 로봇 몸통
***************/
.body{
    position: relative;
    /* 하위 div들을 위한 부모 자격 부여 */
    z-index: -1;
    width: 100px;
    height: 400px;
    border-radius: 50% 50% 0 0;
    margin: 10px auto;
    
    /* clip-path: polygon(0 0,100% 0,90% 50%,100% 100%,0 100%,10% 50%);
    overflow: none; 
    클리핑으로 개미 허리를 만들려고 했지만 클리핑을 하면 기본으로 오버플로우 히든 기능이 있어서 팔 다리가 전부 가려진다.
    오버플로우 논을 입력해도 풀리지 않는다. */
}
/* 로봇 몸통 직계 하위 div는 모두 앱솔루트 */
.body>div{
    position: absolute;
}

/* 개미허리를 body에서 만들 수 없었으니 body의 width 값을 200에서 좀 줄이고 가상요소로 위에 덧붙이자. */
/* 몸통 가상요소로 상단만들기 */
.body::before{
    content: '';
    display: block;
    position: absolute;
    left: -30px;
    width: 160px;
    height: 200px;
    /* 그라데이션 */
    background-image: 
    linear-gradient(-45deg,#ffc8f0, #ff8c8c,#ff5a5a,#ff8769);
    /* 몸깍기 */
    clip-path: 
    polygon(60px 0,
    56px 4px,52px 7px,40px 12px,29px 14px,20px 15px,13px 16px,8px 17px,4px 18px,0 20px,5px 49px,
    8px 54px,11px 59px,14px 65px,17px 72px,19px 78px,21px 85px,23px 91px,24px 97px,25px 102px,26px 108px,
    27px 115px,28px 123px,29px 133px,29px 148px,30px 200px,130px 200px,131px 148px,131px 133px,132px 123px,133px 115px,
    134px 108px,135px 102px,136px 97px,137px 91px,139px 85px,141px 78px,143px 72px,146px 65px,149px 59px,152px 54px,
    155px 49px,160px 20px,156px 18px,152px 17px,147px 16px,140px 15px,131px 14px,120px 12px,108px 7px,104px 4px,
    100px 0);
}

/* 몸통 가상요소로 하단만들기 */
.body::after{
    content: '';
    display: block;
    position: absolute;
    z-index: -1;
    top: 220px;
    left: -45px;
    width: 190px;
    height: 280px;
    /* 그라데이션 */
    background-image:
    linear-gradient(45deg,#010280,#061993,#0C3BAA,#135CC5,#1973D1,#135CC5,#0C3BAA,#061993,#010280);
    
    /* 몸깍기 */
    clip-path:
    polygon(
    95px 20px,
    92px 20px,84px 19px,79px 18px,75px 17px,72px 16px,67px 14px,59px 10px,54px 7px,51px 5px,45px 0,
    44px 7px,43px 13px,42px 18px,41px 23px,40px 26px,39px 29px,38px 32px,35px 40px,32px 47px,28px 56px,
    23px 67px,22px 69px,19px 76px,18px 78px,15px 85px,12px 92px,11px 95px,9px 100px,8px 103px,6px 110px,
    5px 114px,3px 124px,2px 131px,1px 141px,0px 160px,1px 180px,2px 198px,3px 211px,4px 222px,5px 233px,
    6px 243px,7px 253px,8px 262px,9px 271px,10px 280px,13px 279px,16px 278px,20px 277px,23px 276px,26px 275px,
    29px 274px,36px 272px,39px 271px,46px 269px,53px 267px,57px 266px,61px 265px,65px 264px,69px 263px,74px 262px,
    81px 261px,
    95px 260px,
    109px 261px,116px 262px,121px 263px,125px 264px,129px 265px,133px 266px,137px 267px,144px 269px,151px 271px,154px 272px,
    161px 274px,164px 275px,167px 276px,170px 277px,174px 278px,177px 279px,180px 280px,181px 271px,182px 262px,183px 253px,
    184px 243px,185px 233px,186px 222px,187px 211px,188px 198px,189px 180px,190px 160px,189px 141px,188px 131px,187px 124px,
    185px 114px,184px 110px,182px 103px,181px 100px,179px 95px,178px 92px,175px 85px,172px 78px,171px 76px,168px 69px,
    167px 67px,162px 56px,158px 47px,155px 40px,152px 32px,151px 29px,150px 26px,149px 23px,148px 18px,147px 13px,
    146px 7px,145px 0,139px 5px,136px 7px,131px 10px,123px 14px,118px 16px,115px 17px,111px 18px,106px 19px,
    98px 20px
    );
    transform: scaley(.8);
    transform-origin: center top;
}

/* 2-2-1. 목 */
.neck{
    top: -25px;
    left: 35px;
    width: 30px;
    height: 40px;
    border-radius: 0 0 20px 20px;
    outline: 1px solid #FFDEAD;
}

/* 2-2-1. 어깨 공통 클래스 */
.shd{
    width: 40px;
    height: 40px;
    z-index: 1;
}
/* 2-2-1. 왼어깨 */
.L_shd{
    top: 20px;
    left: -70px;
    transform-origin: right top;
    transform: rotate(350deg);
    border-radius: 20px 0 10px 20px;
}
/* 2-2-1. 오른어깨 */
.R_shd{
    top: 20px;
    left: 130px;
    transform-origin: left top;
    transform: rotate(10deg);
    border-radius: 0 20px 20px 10px;
}

/* 2-2-1. 팔 공통 클래스 */
.arm{
    width: 36px;
    height: 160px;
    border-radius: 18px 18px 40% 40%;
    transform-origin: center 18px;
    outline: 1px solid #FFDEAD;
}
/* 공통 팔에 가상 요소로 팔꿈치 만들기 */
.arm::before,
.arm::after{
    content: '';
    display: block;
    position: absolute;
    z-index: 1;
    bottom: -15px;
    left: 1px;
    width: 30px;
    height: 30px;
    border: 1px solid #FFDEAD;
    border-radius: 50%;
    background-color: #ccc;
}
/* 팔꿈치에 원형 그라데이션으로 입체감 살리기 */
.arm::after{
    transform: scale(.75);
    /* 선형 그라데이션 */
    background-image: linear-gradient(-45deg,#222 10%,#ccc 60%,#eee);
}
/* 팔 하단 구현 */
.arm span{
    position: absolute;
    /* 부모는? .arm */
    left: 3px;
    top: 100%;
    width: 30px;
    height: 140px;
    border-radius: 20px 20px 50% 50%;
    transform-origin: center 0;
    outline: 1px solid #FFDEAD;
}
/* 공통 팔 하단에 가상 요소로 손 공간 만들기 */
.arm span::after{
    content: '';
    display: block;
    position: absolute;
    bottom: -75px;
    width: 50px;
    height: 80px;
    outline: 1px solid #FFDEAD;
}
/* 2-2-1. 왼팔 */
.L_arm{
    top : 25px;
    left: -63px;
    transform: rotate(10deg);
}
/* 왼 손 */
.L_arm span::after{
    background: url(../images/hand_left.png) no-repeat top/100%;
    left: -7px;
}
/* 2-2-1. 오른팔 */
.R_arm_plus{
    top : 25px;
    right: -63px;
    width: 36px;
    height: 160px;
    border-radius: 18px;
    transform-origin: center 18px;
    transform: rotate(-10deg);
    /* outline: 1px solid red; */
}
/* 오른 손 */
.R_arm span::after{
    background: url(../images/hand_right.png) no-repeat top/100%;
    right: -7px;
}

/* 2-2-1. 다리 공통 클래스 */
.leg{
    z-index: -1;
    top: 75%;
    width: 80px;
    height: 220px;
    outline: 1px solid #FFDEAD;
}
/* 공통 다리에 가상 요소로 무릎 만들기 */
.leg::before,
.leg::after{
    content: '';
    display: block;
    position: absolute;
    z-index: 1;
    bottom: -20px;
    width: 40px;
    height: 40px;
    background-color: #ccc;
    border-radius: 20px;
    border: 1px solid #FFDEAD;
    /* 트랜스폼 : 먼저x축 축소하고 회전
    -> 무엇을 먼저했느냐에 따라 결과 달라짐! */
    transform: scaleX(.8) rotate(45deg);
}
/* 무릎에 원형 그라데이션으로 입체감 살리기 */
.leg::after{
    transform: scale(.65,.8) rotate(45deg);
    /* 선형 그라데이션 */
    background-image: linear-gradient(-45deg,#222 10%,#ccc 60%,#eee);
}
/* 공통 다리 하단 구현 */
.leg span{
    position: absolute;
    top: 100%;
    /* 부모는? .leg */
    width: 40px;
    height: 200px;
    border-radius: 30px 30px 80% 80%;
    outline: 1px solid #FFDEAD;
}
/* 공통 다리 하단에 가상 요소로 발 만들기 */
.leg span::after{
    content: '';
    display: block;
    position: absolute;
    bottom: -35px;
    left: 5px;
    width: 30px;
    height: 40px;
    background-color: #ffebc8;
    border-radius: 40px 40px 0 0;
    border: 5px solid #ff6464;
    border-bottom: 15px solid #ff6464;
    box-sizing: border-box;
}
/* 2-2-1. 왼쪽 다리 */
.L_leg{
    left: -35px;
    border-radius: 30% 30% 40% 60%;
}
.L_leg::before,
.L_leg::after{
    left: 25px;
}
.L_leg span{
    left: 27px;
}
/* 2-2-1. 오른쪽 다리 */
.R_leg{
    right: -35px;
    border-radius: 30% 30% 60% 40%;
}
.R_leg::before,
.R_leg::after{
    right: 25px;
}
.R_leg span{
    right: 27px;
}
/* 2-2-1. TV */
/*********************************** 3. 하단 영역 ***********************************/

